module sequentail_circuit(clk, reset);
input clk, reset;

always@(posedge clk or negedge reset)
begin

	if(!reset)
	begin
	
	end
	else
	begin
	
	end
end
	
endmodule


module Lab1(input [3:0] num, output [0:7] seg);
   reg [7:0] nseg;
    always @(num) begin
        case (num)
            4'b0000: nseg = 8'b11111100; // 0 0
            4'b0001: nseg = 8'b01100000; // 1 1
            4'b0010: nseg = 8'b11011010; // 2 2
            4'b0011: nseg = 8'b11110010; // 3 3 
            4'b0100: nseg = 8'b01100110; // 4 4
            4'b0101: nseg = 8'b10110110; // 5 5
            4'b0110: nseg = 8'b10111110; // 6 6
            4'b0111: nseg = 8'b11100000; // 7 7
            4'b1000: nseg = 8'b11111110; // 8 8
            4'b1001: nseg = 8'b11110110; // 9 9
				4'b1001: nseg = 8'b11101110; // A A
				4'b1001: nseg = 8'b11111100; // B B
				4'b1001: nseg = 8'b10011100; // C C
				4'b1001: nseg = 8'b01111010; // D D
				4'b1001: nseg = 8'b10011110; // E E
				4'b1001: nseg = 8'b10001110; // F 0
            default: nseg = 8'b11111100; // 0
        endcase
    end
   assign seg = nseg;
endmodule



















